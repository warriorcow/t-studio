---
import Container from './UI/Container.astro';
import Button from "./UI/Button.astro";
import ServiceCard from "./ServiceCard.astro";
import ServiceIcon1 from "../assets/service-icon-1.svg";
import Title from "./UI/Title.astro";
---

<Container gap>
  <div class="services">
    <div class="services__column services__column--sticky">
      <div class="services__sticky">
        <Title tag="h2" text="Услуги" />
        <p class="services__description">Анализируем, проектируем, внедряем и поддерживаем.
          <a href="#">Делаем так, чтобы IT работало на вас, а не наоборот.</a>
        </p>
        <Button class="services__button" text="Оценить проект" />
      </div>
    </div>

    <div class="services__column services__column--slider">
      <ServiceCard
          icon={ServiceIcon1}
          title="Разработка ПО под ключ"
          text="создаем программные решения с нуля, от идеи до внедрения."
      />
      <ServiceCard
          icon={ServiceIcon1}
          title="Разработка ПО под ключ"
          text="создаем программные решения с нуля, от идеи до внедрения."
      />
      <ServiceCard
          icon={ServiceIcon1}
          title="Разработка ПО под ключ"
          text="создаем программные решения с нуля, от идеи до внедрения."
      />
      <ServiceCard
          icon={ServiceIcon1}
          title="Разработка ПО под ключ"
          text="создаем программные решения с нуля, от идеи до внедрения."
      />
      <ServiceCard
          icon={ServiceIcon1}
          title="Разработка ПО под ключ"
          text="создаем программные решения с нуля, от идеи до внедрения."
      />
    </div>
    <Button class="services__button services__button--mobile" text="Оценить проект" />
  </div>
</Container>

<style lang="scss" is:global>
  .services {
    display: grid;
    grid-gap: 0 96px;
    grid-template-columns: 384px 1fr;
    position: relative;

    @include media(md) {
      grid-template-columns: 1fr;
    }

    &__column {
      display: flex;
      gap: 24px;

      @include media(md) {
        margin-top: 30px;
      }

      &--sticky {
        display: flex;
        gap: 24px;
        flex-direction: column;
        align-items: center;

        @include media(md) {
          margin-top: 0;
          align-items: flex-start;
        }
      }

      &--slider {
        @include media(md) {
          overflow-x: auto;
          margin: 30px -10px;
          padding: 0 10px;
          gap: 0 10px;
          scrollbar-width: none;
          -ms-overflow-style: none;

          &::-webkit-scrollbar {
            display: none;
          }
        }

        .service-card {
          margin-bottom: 24px;

          @include media(md) {
            margin-bottom: 0;
          }

          &:nth-child(2) {
            margin-top: 203px;

            @include media(md) {
              margin-top: 0;
            }
          }
        }
      }
    }

    &__sticky {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      position: sticky;
      top: calc(50vh - $header_height);
      gap: 30px 0;
      
      .services__button {
        @include media(md) {
          display: none;
        }
      }
    }

    &__subcolumn {
      display: flex;
      flex-direction: column;
      gap: 24px;

      @include media(md) {
        flex-direction: row;
        gap: 0 10px;
      }

      &:nth-child(2) {
        margin: auto 0;
      }
    }

    &__description {
      @include MontserratMedium18;
    }

    &__button {
      &--mobile {
        display: none;

        @include media(md) {
          display: block;
        }
      }
    }
  }
</style>

<script>
  import Masonry from "masonry-layout";

  let masonry;
  const container = document.querySelector(".services__column--slider");

  function initLayout() {
    const isMobile = window.matchMedia("(max-width: 960px)").matches;

    if (!isMobile) {
      if (!masonry) {
        masonry = new Masonry(container, {
          itemSelector: ".service-card",
          gutter: 24,
        });
      }
    } else {
      if (masonry) {
        masonry.destroy(); // Уничтожаем Masonry, если он активен
        masonry = null;
      }
    }
  }

  window.addEventListener("load", initLayout);
  window.addEventListener("resize", initLayout);
</script>
